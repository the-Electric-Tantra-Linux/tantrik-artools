#!/bin/bash
#
# Copyright (C) 2018-21 artoo@artixlinux.org
# Copyright (C) 2021 Artix Linux Developers
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

m4_include(lib/util-base.sh)
m4_include(lib/util-pkg.sh)
m4_include(lib/base/message.sh)
m4_include(lib/pkg/common.sh)

#{{{ functions

create_repo() {
    local name="$1"
    local org="$2"
    local json url

    json="{ \"auto_init\": true, \"name\":\"$name\", \"gitignores\":\"ArchLinuxPackages\", \"readme\": \"Default\" }"

    url="${GIT_URL}/api/v1/org/$org/repos?access_token=${GIT_TOKEN}"

    msg2 "Create package repo [%s] in org (%s)" "$name" "$org"

    api_post "$url" -H "accept: application/json" \
                    -H "content-type: application/json" \
                    -d "$json"
}

transfer_repo() {
    local name="$1"
    local old_owner="$2"
    local new_owner="landfill" json url
    local json url

    json="{  \"new_owner\": \"$new_owner\",  \"team_ids\": []}"

    url="${GIT_URL}/api/v1/repos/$old_owner/$name/transfer?access_token=${GIT_TOKEN}"

    msg2 "Transfer package repo [%s] in org (%s)" "$name" "$new_owner"

    api_post "$url" -H  "accept: application/json" \
                    -H  "Content-Type: application/json" \
                    -d "$json"
}

#}}}

usage() {
    echo "Usage: ${0##*/} [options]"
    echo '    -r <repo>     Repo name'
    echo '    -c            Create git repo'
    echo '    -t            Transfer git repo to landfill org'
    echo '    -h            This help'
    echo ''
    echo ''
    exit "$1"
}

create=false
transfer=false

opts='r:cth'

while getopts "${opts}" arg; do
    case "${arg}" in
        r) repo="$OPTARG" ;;
        c) create=true ;;
        t) transfer=true ;;
        h|?) usage 0 ;;
        *) echo "invalid argument '${arg}'"; usage 1 ;;
    esac
done

shift $(( OPTIND - 1 ))

org=$(get_pkg_org "${repo}")

${create} && create_repo "${repo}" "${org}"

${transfer} && transfer_repo "${repo}" "${org}"
