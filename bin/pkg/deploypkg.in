#!/bin/bash
#
# Copyright (C) 2018-19 artoo@artixlinux.org
# Copyright (C) 2018 Artix Linux Developers
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

m4_include(lib/util-base.sh)
m4_include(lib/util-pkg.sh)
m4_include(lib/base/message.sh)
m4_include(lib/pkg/deploy.sh)

#{{{ deploy

add(){
    if pkgfile=$(find_cached_pkgfile "${pkgname}"); then
        msg "Found: %s" "${pkgfile}"
        packages+=("${pkgname}")
        action='add'
        ln -sfv "${pkgfile}"{,.sig} "$repo_path"/
    fi
}

remove(){
    packages+=("$(get_pkgbasename "${pkgname}")")
    action='remove'
    rm -v "$repo_path"/"${pkgname}"{,.sig}
}

repo_action(){
    local packages=() action func="$1"
    for pkgname in "${passfiles[@]}"; do
        "$func"
    done
    cd "$repo_path" || return
    if [[ -n "${action}" ]]; then
        repo-"${action}" -R "${dest_repo}"."${pkgdb_ext}" "${packages[@]}"
        ${linksdb} && links-"${action}" "${dest_repo}"."${linksdb_ext}" "${packages[@]}"
    fi
}

#}}}

load_makepkg_config

pkgdb_ext="db.tar.${DBEXT}"
linksdb_ext="links.tar.${DBEXT}"

add_pkg=false
rm_pkg=false
linksdb=false

cmd=${0##*/}
dest_repo=${cmd#*-}

usage() {
    echo "Usage: ${cmd} [options]"
    echo '    -d <dest>          Destination repository'
    echo '    -a                 Add package(s) to repository'
    echo '    -r                 Remove package(s) from repository'
    echo '    -l                 Use links db'
    echo '    -h                 This help'
    echo ''
    echo ''
    exit "$1"
}

opts='arlhd:'

while getopts "${opts}" arg; do
    case "${arg}" in
        d) dest_repo="$OPTARG" ;;
        a) add_pkg=true; rm_pkg=false ;;
        r) rm_pkg=true; add_pkg=false ;;
        l) linksdb=true ;;
        h|?) usage 0 ;;
        *) echo "invalid argument '${arg}'"; usage 1 ;;
    esac
done

shift $(( OPTIND - 1 ))

passfiles=("$@")

repo_path=${REPOS_ROOT}/${dest_repo}/os/${CARCH}

if [[ -n "${passfiles[*]}" ]]; then
    if ${add_pkg}; then
        repo_action add
    fi
    if ${rm_pkg}; then
        repo_action remove
    fi
fi
