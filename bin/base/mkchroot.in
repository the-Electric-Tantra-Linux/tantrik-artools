#!/bin/bash
#
# Copyright (C) 2018-19 artoo@artixlinux.org
# Copyright (C) 2018 Artix Linux Developers
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

m4_include(lib/base/message.sh)
m4_include(lib/base/chroot.sh)
m4_include(lib/base/chroot-version.sh)

working_dir=''
umode=''

files=()
chroot_args=()

usage() {
    echo "Usage: ${0##*/} [options] working-dir package-list..."
    echo ' options:'
    echo '    -U            Use pacman -U to install packages'
    echo '    -C <file>     Location of a pacman config file'
    echo '    -M <file>     Location of a makepkg config file'
    echo '    -c <dir>      Set pacman cache'
    echo '    -f <file>     Copy file from the host to the chroot'
    echo '    -s            Do not run setarch'
    echo '    -h            This message'
    exit 1
}

opts='hUC:M:c:f:s'

while getopts ${opts} arg; do
    case "${arg}" in
        U) umode=U ;;
        C) pacman_conf="$OPTARG" ;;
        M) makepkg_conf="$OPTARG" ;;
        c) cache_dir="$OPTARG" ;;
        f) files+=("$OPTARG") ;;
        s) nosetarch=1 ;;
        h|?) usage ;;
        *) error "invalid argument '%s'" "$arg"; usage ;;
    esac
    if [[ $arg != U ]]; then
        chroot_args+=("-$arg")
        [[ -v OPTARG ]] && chroot_args+=("$OPTARG")
    fi
done
shift $(( OPTIND - 1 ))

(( $# < 2 )) && die 'You must specify a directory and one or more packages.'

check_root

working_dir="$(readlink -f "$1")"
shift 1

[[ -z $working_dir ]] && die 'Please specify a working directory.'

if (( ${#cache_dirs[@]} == 0 )); then
	mapfile -t cache_dirs < <(pacman-conf CacheDir)
fi

umask 0022

[[ -e $working_dir ]] && die "Working directory '%s' already exists" "$working_dir"

mkdir -p "$working_dir"

[[ ! -d $working_dir ]] && mkdir -p "$working_dir"

lock 9 "${working_dir}.lock" "Locking chroot"

if is_btrfs "$working_dir"; then
    rmdir "$working_dir"
    if ! btrfs subvolume create "$working_dir"; then
        die "Couldn't create subvolume for '%s'" "$working_dir"
    fi
    chmod 0755 "$working_dir"
fi

for f in "${files[@]}"; do
    mkdir -p "$(dirname "$working_dir$f")"
    cp "$f" "$working_dir$f"
done

basestrap -${umode}Mc ${pacman_conf:+-C "$pacman_conf"} "$working_dir" \
    "${cache_dirs[@]/#/--cachedir=}" "$@" || die 'Failed to install all packages'

printf '%s.UTF-8 UTF-8\n' en_US de_DE > "$working_dir/etc/locale.gen"
echo 'LANG=en_US.UTF-8' > "$working_dir/etc/locale.conf"
# echo 'KEYMAP=en' > "$working_dir/etc/vconsole.conf"
echo "${CHROOTVERSION}" > "$working_dir/.artools"

dbus-uuidgen --ensure="$working_dir"/etc/machine-id

exec chroot-run \
    "${chroot_args[@]}" \
    "$working_dir" locale-gen
